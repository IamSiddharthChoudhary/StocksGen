{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/app/api/extractImage/route.js"],"sourcesContent":["import axios from \"axios\";\nimport { NextResponse } from \"next/server\";\n\nasync function downloadImageAsBase64(url) {\n  try {\n    const response = await axios({\n      url,\n      method: \"GET\",\n      responseType: \"arraybuffer\",\n    });\n\n    const base64Image = Buffer.from(response.data, \"binary\").toString(\"base64\");\n\n    const contentType = response.headers[\"content-type\"];\n    return `data:${contentType};base64,${base64Image}`;\n  } catch (error) {\n    console.error(\"Error downloading the image:\", error);\n    throw new Error(\"Failed to download and encode the image.\");\n  }\n}\n\nexport async function POST(req) {\n  const { imageUrl } = await req.json();\n\n  if (!imageUrl || typeof imageUrl !== \"string\") {\n    return NextResponse.json({\n      error: 'Missing or invalid \"imageUrl\" query parameter.',\n    });\n  }\n\n  try {\n    const base64EncodedImage = await downloadImageAsBase64(imageUrl);\n    return NextResponse.json({ base64Image: base64EncodedImage });\n  } catch (error) {\n    return NextResponse.json({ error: error.message });\n  }\n}\n\nexport async function GET() {\n  return NextResponse.json({ Shukar: \"maalik da\" });\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,eAAe,sBAAsB,GAAG;IACtC,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,uIAAA,CAAA,UAAK,AAAD,EAAE;YAC3B;YACA,QAAQ;YACR,cAAc;QAChB;QAEA,MAAM,cAAc,OAAO,IAAI,CAAC,SAAS,IAAI,EAAE,UAAU,QAAQ,CAAC;QAElE,MAAM,cAAc,SAAS,OAAO,CAAC,eAAe;QACpD,OAAO,CAAC,KAAK,EAAE,YAAY,QAAQ,EAAE,aAAa;IACpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAEnC,IAAI,CAAC,YAAY,OAAO,aAAa,UAAU;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;QACT;IACF;IAEA,IAAI;QACF,MAAM,qBAAqB,MAAM,sBAAsB;QACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,aAAa;QAAmB;IAC7D,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC;IAClD;AACF;AAEO,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,QAAQ;IAAY;AACjD"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}