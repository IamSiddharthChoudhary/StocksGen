{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/app/api/history/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport yahooFinance from \"yahoo-finance2\";\n\nfunction formatValue(value) {\n  if (value === 0) return \"0\";\n  if (Math.abs(value) >= 1e9) {\n    return (value / 1e9).toFixed(2);\n  } else if (Math.abs(value) >= 1e6) {\n    return (value / 1e6).toFixed(2) + \"M\";\n  } else {\n    return value.toFixed(2);\n  }\n}\n\nexport async function POST(req) {\n  try {\n    const { symbol } = await req.json();\n\n    if (!symbol) {\n      return NextResponse.json(\n        { error: \"Stock symbol is required\" },\n        { status: 400 }\n      );\n    }\n\n    const financials = await yahooFinance.quoteSummary(symbol, {\n      modules: [\n        \"financialData\",\n        \"incomeStatementHistory\",\n        \"defaultKeyStatistics\",\n      ],\n    });\n\n    const incomeStatements =\n      financials.incomeStatementHistory?.incomeStatementHistory || [];\n    const financialData = financials.financialData || {};\n    const keyStats = financials.defaultKeyStatistics || {};\n\n    if (incomeStatements.length === 0) {\n      return NextResponse.json(\n        { error: \"Financial data not available\" },\n        { status: 404 }\n      );\n    }\n\n    const name = keyStats.longName || \"N/A\";\n\n    const years = [2023, 2022, 2021, 2024];\n    const stockData = {\n      name,\n      ticker: symbol,\n    };\n\n    for (const year of years) {\n      const statement = incomeStatements.find(\n        (entry) => new Date(entry.endDate).getFullYear() === year\n      );\n\n      if (statement) {\n        const yearSuffix = year.toString().slice(2);\n        stockData[`revenue${yearSuffix}`] = formatValue(\n          statement.totalRevenue || 0\n        );\n        stockData[`ebit${yearSuffix}`] = formatValue(\n          (statement.totalRevenue || 0) -\n            (statement.totalOperatingExpenses || 0)\n        );\n        stockData[`netProfit${yearSuffix}`] = formatValue(\n          statement.netIncome || 0\n        );\n        stockData[`ebitda${yearSuffix}`] = formatValue(\n          financialData.ebitda || 0\n        );\n        stockData[`roi${yearSuffix}`] =\n          ((financialData.returnOnEquity || 0) * 100).toFixed(2) + \"%\";\n      }\n    }\n\n    Object.keys(stockData).forEach((key) => {\n      if (stockData[key] === undefined) {\n        stockData[key] = \"N/A\";\n      }\n    });\n\n    return NextResponse.json(stockData);\n  } catch (error) {\n    console.error(\"Error fetching stock data:\", error);\n    return NextResponse.json(\n      { error: \"Failed to fetch stock data\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,SAAS,YAAY,KAAK;IACxB,IAAI,UAAU,GAAG,OAAO;IACxB,IAAI,KAAK,GAAG,CAAC,UAAU,KAAK;QAC1B,OAAO,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC;IAC/B,OAAO,IAAI,KAAK,GAAG,CAAC,UAAU,KAAK;QACjC,OAAO,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,KAAK;IACpC,OAAO;QACL,OAAO,MAAM,OAAO,CAAC;IACvB;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAEjC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,aAAa,MAAM,0LAAA,CAAA,UAAY,CAAC,YAAY,CAAC,QAAQ;YACzD,SAAS;gBACP;gBACA;gBACA;aACD;QACH;QAEA,MAAM,mBACJ,WAAW,sBAAsB,EAAE,0BAA0B,EAAE;QACjE,MAAM,gBAAgB,WAAW,aAAa,IAAI,CAAC;QACnD,MAAM,WAAW,WAAW,oBAAoB,IAAI,CAAC;QAErD,IAAI,iBAAiB,MAAM,KAAK,GAAG;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,SAAS,QAAQ,IAAI;QAElC,MAAM,QAAQ;YAAC;YAAM;YAAM;YAAM;SAAK;QACtC,MAAM,YAAY;YAChB;YACA,QAAQ;QACV;QAEA,KAAK,MAAM,QAAQ,MAAO;YACxB,MAAM,YAAY,iBAAiB,IAAI,CACrC,CAAC,QAAU,IAAI,KAAK,MAAM,OAAO,EAAE,WAAW,OAAO;YAGvD,IAAI,WAAW;gBACb,MAAM,aAAa,KAAK,QAAQ,GAAG,KAAK,CAAC;gBACzC,SAAS,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG,YAClC,UAAU,YAAY,IAAI;gBAE5B,SAAS,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,YAC/B,CAAC,UAAU,YAAY,IAAI,CAAC,IAC1B,CAAC,UAAU,sBAAsB,IAAI,CAAC;gBAE1C,SAAS,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,YACpC,UAAU,SAAS,IAAI;gBAEzB,SAAS,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,YACjC,cAAc,MAAM,IAAI;gBAE1B,SAAS,CAAC,CAAC,GAAG,EAAE,YAAY,CAAC,GAC3B,CAAC,CAAC,cAAc,cAAc,IAAI,CAAC,IAAI,GAAG,EAAE,OAAO,CAAC,KAAK;YAC7D;QACF;QAEA,OAAO,IAAI,CAAC,WAAW,OAAO,CAAC,CAAC;YAC9B,IAAI,SAAS,CAAC,IAAI,KAAK,WAAW;gBAChC,SAAS,CAAC,IAAI,GAAG;YACnB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}