{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/fancy-dark-loading.tsx"],"sourcesContent":["\"use client\";\n\nimport { Loader2 } from \"lucide-react\";\n\nexport default function Component() {\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white\">\n      <div className=\"w-64 text-center\">\n        <div className=\"relative\">\n          <Loader2\n            className=\"w-24 h-24 animate-spin text-blue-500 mx-auto mb-4\"\n            aria-hidden=\"true\"\n          />\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-2xl font-bold text-blue-300\">\n              {/* {Math.round(progress)}% */}\n            </div>\n          </div>\n        </div>\n        <h1 className=\"text-3xl font-bold mb-2 text-blue-300\">Loading...</h1>\n        <p className=\"text-gray-400 mb-4\">\n          Preparing your presentation, This may take a while\n        </p>\n        {/* <Progress value={progress} className=\"w-full h-2 bg-gray-700\" /> */}\n        <style jsx>{`\n          .progress-indicator {\n            background-color: #8b5cf6;\n          }\n        `}</style>\n        <div className=\"mt-8 space-y-2\">\n          <div className=\"h-2 w-full bg-black rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-pink-500 rounded-full animate-pulse\"\n              style={{ width: \"75%\" }}\n            ></div>\n          </div>\n          <div className=\"h-2 w-full bg-gray-800 rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-purple-500 rounded-full animate-pulse\"\n              style={{ width: \"55%\", animationDelay: \"0.2s\" }}\n            ></div>\n          </div>\n          <div className=\"h-2 w-full bg-gray-800 rounded-full overflow-hidden\">\n            <div\n              className=\"h-full bg-blue-500 rounded-full animate-pulse\"\n              style={{ width: \"90%\", animationDelay: \"0.4s\" }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;sDAAc;;8BACb,8OAAC;8DAAc;;sCACb,8OAAC,iNAAA,CAAA,UAAO;4BACN,WAAU;4BACV,eAAY;;;;;;sCAEd,8OAAC;sEAAc;sCACb,cAAA,8OAAC;0EAAc;;;;;;;;;;;;;;;;;8BAKnB,8OAAC;8DAAa;8BAAwC;;;;;;8BACtD,8OAAC;8DAAY;8BAAqB;;;;;;;;;;8BASlC,8OAAC;8DAAc;;sCACb,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;gCAAM;0EADZ;;;;;;;;;;;sCAId,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;oCAAO,gBAAgB;gCAAO;0EADpC;;;;;;;;;;;sCAId,8OAAC;sEAAc;sCACb,cAAA,8OAAC;gCAEC,OAAO;oCAAE,OAAO;oCAAO,gBAAgB;gCAAO;0EADpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxB"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/components/StockDataDisplay.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Card,\n  CardDescription,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport type { StockData, TableType } from \"../app/types/StockData\";\nimport Loading from \"@/components/fancy-dark-loading\";\nimport { Share } from \"lucide-react\";\n\ninterface StockDataDisplayProps {\n  data: TableType;\n}\n\ninterface Strength {\n  title: string;\n  description: string;\n}\n\nexport function StockDataDisplay({ data }: StockDataDisplayProps) {\n  const [cachedData, setCachedData] = useState<TableType | null>(null);\n  const [companyDescription, setCompanyDescription] = useState<string>(\"\");\n  const [imageSrc, setImageSrc] = useState<string>(\n    \"https://images.unsplash.com/photo-1456930266018-fda42f7404a7?q=80&w=1595&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  );\n  const [imageSrc2, setImageSrc2] = useState<string>(\n    \"https://images.unsplash.com/photo-1456930266018-fda42f7404a7?q=80&w=1595&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n  );\n  const [keyMetrics, setKeyMetrics] = useState<\n    Array<{ label: string; value: string | number; description?: string }>\n  >([]);\n  const [financialHealth, setFinancialHealth] = useState<\n    Array<{ label: string; value: string | number; description?: string }>\n  >([]);\n  const [strengthsAndCatalysts, setStrengthsAndCatalysts] = useState<\n    Strength[]\n  >([]);\n  const [analystHealth, setAnalystHealth] = useState<\n    Array<{ label: string; value: string | number; description?: string }>\n  >([]);\n  const [risksAndMitigations, setRisksAndMitigations] = useState<Strength[]>(\n    []\n  );\n  const [conclusion, setConclusion] = useState<string>(\"\");\n  const [loadingStates, setLoadingStates] = useState({\n    companyOverview: true,\n    keyMetrics: true,\n    financialHealth: true,\n    strengthsAndCatalysts: true,\n    analystHealth: true,\n    risksAndMitigations: true,\n    conclusion: true,\n  });\n\n  useEffect(() => {\n    if (!cachedData) {\n      setCachedData(data);\n    }\n  }, [data, cachedData]);\n\n  const fetchCompanyOverview = useCallback(async () => {\n    if (data.url1) setImageSrc(data.url1);\n    setCompanyDescription(data.description);\n    setLoadingStates((prev) => ({ ...prev, companyOverview: false }));\n  }, [cachedData]);\n\n  const fetchKeyMetrics = useCallback(async () => {\n    if (cachedData) {\n      try {\n        const metricsData = [\n          {\n            label: \"Market Cap\",\n            value: \"$\" + cachedData.marketCap,\n            description: data.marketCapDsc,\n          },\n          {\n            label: \"Shares Outstanding\",\n            value: cachedData.sharesOutstanding,\n            description: data.marketCapDsc,\n          },\n          {\n            label: \"Shares Float\",\n            value: cachedData.float,\n            description: data.floatDsc,\n          },\n          {\n            label: \"EV/EBITDA\",\n            value: cachedData.evEbitda + \"x\",\n            description: data.evEbitdaDsc,\n          },\n          {\n            label: \"P/E\",\n            value: cachedData.peTtm + \"x\",\n            description: data.peTtmDsc,\n          },\n          {\n            label: \"Dividend Rate\",\n            value: \"$\" + cachedData.dividendRate,\n            description: data.dividendRateDsc,\n          },\n        ];\n\n        setKeyMetrics(metricsData);\n      } catch (error) {\n        console.error(\"Error fetching key metrics:\", error);\n        setKeyMetrics([]);\n      } finally {\n        setLoadingStates((prev) => ({ ...prev, keyMetrics: false }));\n      }\n    }\n  }, [cachedData]);\n\n  const fetchFinancialHealth = useCallback(async () => {\n    if (cachedData) {\n      const financialsData = [\n        {\n          label: \"Cash Position\",\n          value: \"$\" + cachedData.cashPosition,\n          description: data.cashPositionDsc,\n        },\n        {\n          label: \"Total Debt\",\n          value: \"$\" + cachedData.totalDebt,\n          description: data.totalDebtDsc,\n        },\n        {\n          label: \"Debt to Equity\",\n          value: cachedData.debtToEquity + \"x\",\n          description: data.debtToEquityDsc,\n        },\n        {\n          label: \"Current Ratio\",\n          value: cachedData.currentRatio + \"x\",\n          description: data.currentRatioDsc,\n        },\n      ];\n\n      setFinancialHealth(financialsData);\n      setLoadingStates((prev) => ({ ...prev, financialHealth: false }));\n    }\n  }, [cachedData]);\n\n  const fetchStrengthsAndCatalysts = useCallback(async () => {\n    if (cachedData) {\n      setStrengthsAndCatalysts(parsePoints(data.strengthsAndCatalysts));\n      setLoadingStates((prev) => ({ ...prev, strengthsAndCatalysts: false }));\n    }\n  }, [cachedData]);\n\n  const fetchAnalystHealth = useCallback(async () => {\n    if (cachedData) {\n      const analystInfo = [\n        {\n          label: \"Analyst Rating (1-5)\",\n          value: cachedData.analystRating,\n          description: cachedData.analystRatingDsc,\n        },\n        {\n          label: \"Number of Analysts\",\n          value: cachedData.numberOfAnalysts,\n          description: cachedData.numberOfAnalystsDsc,\n        },\n        {\n          label: \"Mean Target Price\",\n          value: \"$\" + cachedData.meanTargetPrice,\n          description: cachedData.meanTargetPriceDsc,\n        },\n        {\n          label: \"Implied +/-\",\n          value: cachedData.impliedChange,\n          description: cachedData.impliedChangeDsc,\n        },\n      ];\n\n      setAnalystHealth(analystInfo);\n      setLoadingStates((prev) => ({ ...prev, analystHealth: false }));\n    }\n  }, [cachedData]);\n\n  const fetchRisksAndMitigations = useCallback(async () => {\n    setLoadingStates((prev) => ({ ...prev, risksAndMitigations: false }));\n    setRisksAndMitigations(parseRisksAndMitigations(data.risksAndMitigation));\n  }, [cachedData]);\n\n  const fetchConclusion = useCallback(async () => {\n    if (data.url2) setImageSrc2(data.url2);\n    setLoadingStates((prev) => ({ ...prev, conclusion: false }));\n    setConclusion(data.conclusion);\n  }, [cachedData]);\n\n  useEffect(() => {\n    if (cachedData) {\n      fetchCompanyOverview();\n      fetchKeyMetrics();\n      fetchFinancialHealth();\n      fetchStrengthsAndCatalysts();\n      fetchAnalystHealth();\n      fetchRisksAndMitigations();\n      fetchConclusion();\n    }\n  }, [\n    cachedData,\n    fetchCompanyOverview,\n    fetchKeyMetrics,\n    fetchFinancialHealth,\n    fetchStrengthsAndCatalysts,\n    fetchAnalystHealth,\n    fetchRisksAndMitigations,\n    fetchConclusion,\n  ]);\n\n  if (!cachedData) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"m-0 p-0\">\n      <div className=\"h-full flex flex-col gap-10 p-10 items-center justify-center bg-slate-900\">\n        {loadingStates.companyOverview ? (\n          <LoadingCard />\n        ) : (\n          <CompanyOverview\n            name={cachedData.name}\n            description={companyDescription}\n            imageSrc={imageSrc}\n          />\n        )}\n        {loadingStates.keyMetrics ? (\n          <LoadingCard />\n        ) : (\n          <KeyMetrics metrics={keyMetrics} />\n        )}\n        {loadingStates.financialHealth ? (\n          <LoadingCard />\n        ) : (\n          <FinancialHealth financials={financialHealth} />\n        )}\n        {loadingStates.strengthsAndCatalysts ? (\n          <LoadingCard />\n        ) : (\n          <StrengthsAndCatalysts strengths={strengthsAndCatalysts} />\n        )}\n        {loadingStates.analystHealth ? (\n          <LoadingCard />\n        ) : (\n          <AnalystHealth analystData={analystHealth} />\n        )}\n        {loadingStates.risksAndMitigations ? (\n          <LoadingCard />\n        ) : (\n          <RisksAnalysis points={risksAndMitigations} />\n        )}\n        {loadingStates.conclusion ? (\n          <LoadingCard />\n        ) : (\n          <Conclusion\n            rec={data.recommendation}\n            description={conclusion}\n            imageSrc={imageSrc2}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction CompanyOverview({\n  name,\n  description,\n  imageSrc,\n}: {\n  name: string;\n  description: string;\n  imageSrc: string;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-white border-0\">\n      <CardHeader className=\"flex-1 p-16 justify-center\">\n        <CardTitle className=\"barlow-bolds text-5xl pb-3 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          {name}\n        </CardTitle>\n        <CardDescription className=\"montserrat text-xl text-white\">\n          {description}\n        </CardDescription>\n      </CardHeader>\n      <CardHeader className=\"w-5/12 p-0 relative overflow-hidden items-center justify-center\">\n        <CardDescription className=\"text-center overflow-hidden h-full w-full text-gray-400\">\n          <img\n            className=\"object-cover w-full h-full rounded-r-lg\"\n            src={imageSrc}\n            alt={`${name} visual representation`}\n          />\n        </CardDescription>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction KeyMetrics({\n  metrics,\n}: {\n  metrics: Array<{\n    label: string;\n    value: string | number;\n    description?: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] pt-8 pb-8 bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 overflow-hidden\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Key Market Metrics: Reflecting Value and Potential\n        </CardTitle>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {metrics.map((metric) => (\n            <div\n              key={metric.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{metric.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{metric.label}</p>\n              <p className=\"text-xs mt-2 text-gray-400\">{metric.description}</p>\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction FinancialHealth({\n  financials,\n}: {\n  financials: Array<{\n    label: string;\n    value: string | number;\n    description?: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold pb-6 text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Financial Health\n        </CardTitle>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {financials.map((item) => (\n            <div\n              key={item.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{item.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{item.label}</p>\n              <p className=\"text-xs mt-2 text-gray-400\">{item.description}</p>\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction StrengthsAndCatalysts({ strengths }: { strengths: Strength[] }) {\n  return (\n    <Card className=\"flex flex-col w-[80vw] overflow-hidden h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Strengths and Catalysts for Continued Success\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {strengths.map((strength, index) => (\n            <Card\n              key={index}\n              className=\"montserrat bg-gray-800 border-0 rounded-lg pt-6 shadow-md\"\n            >\n              <CardContent className=\"flex gap-9 items-start space-x-3\">\n                <div>\n                  <div className=\"w-[4px] h-[15px] mt-1.5 absolute bg-purple-400 rounded-full \"></div>\n                  <CardTitle className=\"text-lg pl-3 font-semibold text-white\">\n                    {strength.title}\n                  </CardTitle>\n                  <CardDescription className=\" text-sm text-gray-300 mt-2\">\n                    {strength.description}\n                  </CardDescription>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction AnalystHealth({\n  analystData,\n}: {\n  analystData: Array<{\n    label: string;\n    value: string | number;\n    description?: string;\n  }>;\n}) {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl pb-6 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Analyst Health\n        </CardTitle>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {analystData.map((item) => (\n            <div\n              key={item.label}\n              className=\"montserrat p-6 bg-gray-800 rounded-md text-center\"\n            >\n              <h3 className=\"text-xl font-bold\">{item.value}</h3>\n              <p className=\"text-base font-semibold mt-2\">{item.label}</p>\n              <p className=\"text-xs mt-2 text-gray-400\">{item.description}</p>\n            </div>\n          ))}\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nfunction RisksAnalysis({ points }: { points: Strength[] }) {\n  return (\n    <Card className=\"flex flex-col w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 overflow-hidden\">\n      <CardHeader className=\"flex-1 p-3 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-3xl font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Risks and Mitigations\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 pb-6\">\n          {points.map((point, index) => (\n            <Card\n              key={index}\n              className=\"montserrat bg-gray-800 border-0 rounded-lg pt-6 shadow-md\"\n            >\n              <CardContent className=\"flex items-start space-x-3\">\n                <div>\n                  <div className=\"w-[4px] h-[15px] mt-1.5 absolute bg-purple-400 rounded-full \"></div>\n                  <CardTitle className=\"flex pl-3 gap-2 text-lg font-semibold text-white\">\n                    {point.title}\n                  </CardTitle>\n                  <CardDescription className=\"text-sm text-gray-300 mt-2\">\n                    {point.description.split(\"Mitigation:\").map((part, i) => (\n                      <React.Fragment key={i}>\n                        {i === 0 ? (\n                          <>{part}</>\n                        ) : (\n                          <>\n                            <br />\n                            <span className=\"font-bold text-white\">\n                              Mitigation:{\" \"}\n                            </span>\n                            {part}\n                          </>\n                        )}\n                      </React.Fragment>\n                    ))}\n                  </CardDescription>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction Conclusion({\n  description,\n  imageSrc,\n  rec,\n}: {\n  description: string;\n  imageSrc: string;\n  rec: string;\n}) {\n  console.log(description);\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0\">\n      <CardHeader className=\"w-1/3 p-0 relative overflow-hidden items-center justify-center\">\n        <CardDescription className=\"text-center overflow-hidden h-full w-full text-gray-400\">\n          <img\n            className=\"object-cover h-full rounded-l-lg\"\n            src={imageSrc}\n            alt={`${name} visual representation`}\n          />\n        </CardDescription>\n      </CardHeader>\n      <CardHeader className=\"flex-1 p-16 items-center justify-center\">\n        <CardTitle className=\"barlow-bold text-right text-4xl pb-3 font-bold text-white bg-gradient-to-r from-purple-400 via-blue-500 to-indigo-400 inline-block text-transparent bg-clip-text\">\n          Conclusion\n        </CardTitle>\n        <CardDescription className=\"montserrat text-xl text-center text-white\">\n          {description}\n          <div className=\"flex items-center justify-center\">\n            <span className=\"font-bold text-white barlow-bold text-2xl\">\n              Recommendation:{\" \"}\n            </span>\n            <div className=\"montserrat text-2xl\">{\" \" + rec}</div>\n          </div>\n        </CardDescription>\n      </CardHeader>\n    </Card>\n  );\n}\n\n// async function getImage(_name: string) {\n//   const data = { stockName: _name };\n//   const res = await fetch(\"/api/image\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(data),\n//   });\n//   const response = await res.json();\n//   return response.imageUrl;\n// }\n\nfunction parsePoints(text: string): Strength[] {\n  const strengths: Strength[] = [];\n  const parts = text.split(/\\d+\\./).slice(1);\n\n  for (const part of parts) {\n    const [title, ...descriptionParts] = part.split(\":\");\n    const description = descriptionParts.join(\":\").trim();\n    if (title && description) {\n      strengths.push({\n        title: title.trim(),\n        description: description.replace(/\\.$/, \"\"),\n      });\n    }\n  }\n\n  return strengths;\n}\n\nfunction parseRisksAndMitigations(text: string): Strength[] {\n  const risks: Strength[] = [];\n  const parts = text.split(/\\d+\\./).slice(1);\n\n  for (const part of parts) {\n    const [title, ...descriptionParts] = part.split(\":\");\n    const fullDescription = descriptionParts.join(\":\").trim();\n    const [risk, mitigation] = fullDescription.split(\"Mitigation:\");\n\n    if (title && risk) {\n      risks.push({\n        title: title.trim(),\n        description: `${risk.trim()}\\nMitigation:${\n          mitigation ? mitigation.trim() : \"Not provided\"\n        }`,\n      });\n    }\n  }\n\n  return risks;\n}\n\nfunction LoadingCard() {\n  return (\n    <Card className=\"flex w-[80vw] h-[75vh] bg-zinc-900 shadow-2xl shadow-cyan-400 text-gray-100 border-0 items-center justify-center\">\n      <CardContent>\n        <div className=\"w-16 h-16 border-t-4 border-blue-500 border-solid rounded-full animate-spin\"></div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1264, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/lib/supaBaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nexport function createSupabaseClient() {\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;\n  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n  let client: any;\n\n  if (key && url) client = createClient(url, key);\n\n  return client;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS;IACd,MAAM;IACN,MAAM;IACN,IAAI;IAEJ,wCAAgB,SAAS,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,KAAK;IAE3C,OAAO;AACT"}},
    {"offset": {"line": 1276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":["file:///home/siddharth/Downloads/Programming/pptgen%20%281%29/src/app/viewOnlyPpt/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport Loading from \"@/components/fancy-dark-loading\";\nimport { StockDataDisplay } from \"@/components/StockDataDisplay\";\nimport type { StockData, TableType } from \"@/app/types/StockData\";\nimport { createSupabaseClient } from \"@/lib/supaBaseClient\";\n\nexport default function Page() {\n  const [stockData, setStockData] = useState<TableType | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const params = useParams();\n  const user = params.user as string;\n  const id = params.id as string;\n\n  useEffect(() => {\n    const supabase = createSupabaseClient();\n\n    async function data() {\n      setIsLoading(true);\n\n      let { data, error } = await supabase\n        .from(\"company\")\n        .select(\"*\")\n        .eq(\"ticker\", id)\n        .single();\n      if (data) {\n        let d: TableType = data;\n        setStockData(d);\n      } else {\n        let { data: d, error } = await supabase\n          .from(\"company\")\n          .select(\"*\")\n          .eq(\"ticker\", id)\n          .single();\n        setStockData(d);\n      }\n\n      console.log(data);\n\n      setIsLoading(false);\n    }\n\n    data();\n  }, [id]);\n\n  if (isLoading) return <Loading />;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return <StockDataDisplay data={stockData} id={id} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,OAAO,OAAO,IAAI;IACxB,MAAM,KAAK,OAAO,EAAE;IAEpB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,CAAA,GAAA,4HAAA,CAAA,uBAAoB,AAAD;QAEpC,eAAe;YACb,aAAa;YAEb,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,IAAI,CAAC,WACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAU,IACb,MAAM;YACT,IAAI,MAAM;gBACR,IAAI,IAAe;gBACnB,aAAa;YACf,OAAO;gBACL,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,GAAG,MAAM,SAC5B,IAAI,CAAC,WACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAU,IACb,MAAM;gBACT,aAAa;YACf;YAEA,QAAQ,GAAG,CAAC;YAEZ,aAAa;QACf;QAEA;IACF,GAAG;QAAC;KAAG;IAEP,IAAI,WAAW,qBAAO,8OAAC,8IAAA,CAAA,UAAO;;;;;IAC9B,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;IAEjD,qBAAO,8OAAC,sIAAA,CAAA,mBAAgB;QAAC,MAAM;QAAW,IAAI;;;;;;AAChD"}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}